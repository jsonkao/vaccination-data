library(tidyverse)
data <- read.csv('../raw_data.csv', skip = 2) %>%
filter(row_number() <= n() - 21) %>%
select(-Footnotes) %>%
pivot_longer(!Location, names_to="date", values_to="value") %>%
separate(date, c('date', 'category'), sep = "__")
data %>%
filter(grepl('known.race', category, ignore.case = T)) %>%
rename(state = Location) %>%
mutate(date = parse_datetime(date, format = 'as.of.%B.%d..%Y')) %>%
mutate(value = as.numeric(value)) %>%
mutate(category = if_else(grepl("Unknown", category), "unknown", 'known')) %>%
filter(category == 'unknown') %>%
ggplot(aes(date, value, color = category)) +
geom_line() +
geom_point() +
facet_wrap(~ state)
data %>%
filter(grepl('known.race', category, ignore.case = T)) %>%
rename(state = Location) %>%
mutate(date = parse_datetime(date, format = 'as.of.%B.%d..%Y')) %>%
mutate(value = as.numeric(value)) %>%
mutate(category = if_else(grepl("Unknown", category), "unknown", 'known')) %>%
filter(category == 'unknown') %>%
ggplot(aes(date, value, color = category)) +
geom_line() +
geom_point() +
geom_text(aes(label = value)) +
facet_wrap(~ state)
data %>%
filter(grepl('known.race', category, ignore.case = T)) %>%
rename(state = Location) %>%
mutate(date = parse_datetime(date, format = 'as.of.%B.%d..%Y')) %>%
mutate(value = as.numeric(value)) %>%
mutate(category = if_else(grepl("Unknown", category), "unknown", 'known')) %>%
filter(category == 'unknown') %>%
ggplot(aes(date, value, color = category)) +
geom_line() +
geom_point() +
geom_text(aes(label = value),hjust=0,vjust=0) +
facet_wrap(~ state)
library(ggrepel)
data %>%
filter(grepl('known.race', category, ignore.case = T)) %>%
rename(state = Location) %>%
mutate(date = parse_datetime(date, format = 'as.of.%B.%d..%Y')) %>%
mutate(value = as.numeric(value)) %>%
mutate(category = if_else(grepl("Unknown", category), "unknown", 'known')) %>%
filter(category == 'unknown') %>%
ggplot(aes(date, value, color = category)) +
geom_line() +
geom_point() +
geom_text_repel(aes(label = value)) +
facet_wrap(~ state)
library(dplyr)
library(tidycensus)
library(jsonlite)
census_api_key('b0c03e2d243c837b10d7bb336a998935c35828af')
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
get_acs(
state = "VA",
county = c("Richmond"),
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe)
get_acs(
state = "Virginia",
county = c("Richmond city"),
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe)
get_acs(
state = "Virginia",
county = c("Richmond city"),
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe) %>%
spread(variable, estimate) %>%
gather(key = 'race', value = 'population', white, black, hispanic, asian) %>%
mutate(proportion = population / total_population) %>%
filter(!is.na(income)) %>%
get_acs(
state = "Virginia",
county = c("Richmond city"),
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe) %>%
spread(variable, estimate) %>%
gather(key = 'race', value = 'population', white, black, hispanic, asian) %>%
mutate(proportion = population / total_population) %>%
filter(!is.na(income))
get_acs(
state = "Virginia",
county = c("Richmond city"),
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe) %>%
spread(variable, estimate) %>%
gather(key = 'race', value = 'population', white, black, hispanic, asian) %>%
mutate(proportion = population / total_population) %>%
filter(!is.na(income))
get_acs(
state = "Virginia",
county = c("Richmond city"),
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe) %>%
head
get_acs(
state = "Virginia",
county = c("Richmond city"),
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe) %>%
pivot_wider(c('white', 'black', 'hispanic', 'asian'))
get_acs(
state = "Virginia",
county = c("Richmond city"),
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe) %>% head
get_acs(
state = "Virginia",
county = c("Richmond city"),
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe) %>%
pivot_wider(names_from = variable, values_from = estimate)
get_acs(
state = "Virginia",
county = c("Richmond city"),
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe) %>%
pivot_wider(names_from = variable, values_from = estimate) %>%
select(-NAME)
get_acs(
state = "Virginia",
county = c("Richmond city"),
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe) %>%
pivot_wider(names_from = variable, values_from = estimate) %>%
select(-NAME) %>%
toJSON()
patterns <- read.csv('./patterns.csv')
patterns <- read.csv('~/Development/fill-vaccine-data/patterns.csv')
censusData <- get_acs(
state = "Virginia",
county = c("Richmond city"),
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe) %>%
pivot_wider(names_from = variable, values_from = estimate) %>%
select(-NAME) %>%
toJSON()
patterns
patterns %>% head
get_acs(
state = "Virginia",
county = c("Richmond city"),
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe) %>%
pivot_wider(names_from = variable, values_from = estimate) %>%
select(-NAME) %>%
toJSON() %>%
write.csv('~/Development/census.csv')
get_acs(
state = "Virginia",
county = c("Richmond city"),
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe) %>%
pivot_wider(names_from = variable, values_from = estimate) %>%
select(-NAME) %>%
toJSON()
get_acs(
state = "Virginia",
county = c("Richmond city"),
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe) %>%
pivot_wider(names_from = variable, values_from = estimate) %>%
select(-NAME) %>%
toJSON() %>%
write("census.json")
get_acs(
state = "Virginia",
county = c("Richmond city"),
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe) %>%
pivot_wider(names_from = variable, values_from = estimate) %>%
select(-NAME) %>%
toJSON() %>%
write("~/Development/fill-vaccine-data/census.json")
get_acs(
state = "Virginia",
county = c('51015', '51036', '51145', '51830', '51550', '51075', '51179', '51087', '51149', '51101', '51083', '51740', '51183', '51033', '51177', '51135', '51670', '51147', '51171', '51095', '51109', '51700', '51085', '51059', '51121', '51133', '51540', '51041', '51097', '51760', '51730', '51107', '51049', '51127', '51053', '51650', '51093', '51125', '51800'),
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe) %>%
pivot_wider(names_from = variable, values_from = estimate) %>%
select(-NAME) %>%
toJSON() %>%
write("~/Development/fill-vaccine-data/census.json")
get_acs(
state = "Virginia",
county = c('51015', '51036', '51145', '51830', '51550', '51075', '51179', '51087', '51149', '51101', '51083', '51740', '51183', '51033', '51177', '51135', '51670', '51147', '51171', '51095', '51109', '51700', '51085', '51059', '51121', '51133', '51540', '51041', '51097', '51760', '51730', '51107', '51049', '51127', '51053', '51650', '51093', '51125', '51800'),
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe) %>%
pivot_wider(names_from = variable, values_from = estimate) %>%
select(-NAME) %>%
toJSON() %>%
write("~/Development/fill-vaccine-data/census.json")
rlang::last_error(
)
rlang::last_trace()
get_acs(
state = "Virginia",
county = '*',
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe) %>%
pivot_wider(names_from = variable, values_from = estimate) %>%
select(-NAME) %>%
toJSON() %>%
write("~/Development/fill-vaccine-data/census.json")
get_acs(
state = "Virginia",
geography = "block group",
variables = c(
income = "B19013_001",
total_population = "B02001_001",
white = "B02001_002",
black = "B02001_003",
hispanic = "B03002_012",
asian = "B02001_005"
)
) %>%
select(-moe) %>%
pivot_wider(names_from = variable, values_from = estimate) %>%
select(-NAME) %>%
toJSON() %>%
write("~/Development/fill-vaccine-data/census.json")
library(tidyverse)
data %>%
filter(grepl('known.race', category, ignore.case = T)) %>%
rename(state = Location) %>%
mutate(date = parse_datetime(date, format = 'as.of.%B.%d..%Y')) %>%
mutate(value = as.numeric(value)) %>%
mutate(category = if_else(grepl("Unknown", category), "unknown", 'known')) %>%
filter(category == 'unknown') %>%
ggplot(aes(date, value, color = category)) +
geom_line() +
geom_point() +
geom_text_repel(aes(label = value)) +
facet_wrap(~ state)
data <- read.csv('../raw_data.csv', skip = 2) %>%
filter(row_number() <= n() - 21) %>%
select(-Footnotes) %>%
pivot_longer(!Location, names_to="date", values_to="value") %>%
separate(date, c('date', 'category'), sep = "__")
data %>%
filter(grepl('known.race', category, ignore.case = T)) %>%
rename(state = Location) %>%
mutate(date = parse_datetime(date, format = 'as.of.%B.%d..%Y')) %>%
mutate(value = as.numeric(value)) %>%
mutate(category = if_else(grepl("Unknown", category), "unknown", 'known')) %>%
filter(category == 'unknown') %>%
ggplot(aes(date, value, color = category)) +
geom_line() +
geom_point() +
geom_text_repel(aes(label = value)) +
facet_wrap(~ state)
library(ggrepel)
data %>%
filter(grepl('known.race', category, ignore.case = T)) %>%
rename(state = Location) %>%
mutate(date = parse_datetime(date, format = 'as.of.%B.%d..%Y')) %>%
mutate(value = as.numeric(value)) %>%
mutate(category = if_else(grepl("Unknown", category), "unknown", 'known')) %>%
filter(category == 'unknown') %>%
ggplot(aes(date, value, color = category)) +
geom_line() +
geom_point() +
geom_text_repel(aes(label = value)) +
facet_wrap(~ state)
